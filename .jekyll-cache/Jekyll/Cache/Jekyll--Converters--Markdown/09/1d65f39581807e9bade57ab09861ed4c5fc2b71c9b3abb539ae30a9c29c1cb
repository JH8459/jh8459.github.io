I"<p><img src="https://user-images.githubusercontent.com/83164003/127775612-7464075f-89e7-478e-82ee-dc1c2710a125.jpeg" alt="TIL" /></p>
<h2 id="today-i-learnd">Today I Learnd</h2>
<h3 id="1-컴퓨터-공학-기초">1. 컴퓨터 공학 기초</h3>
<hr />

<h4 id="1-1-문자열">1-1. 문자열</h4>
<hr />
<h5 id="유니코드">유니코드</h5>
<ul>
  <li>
    <p>2010년도 이후, 유니코드라고 불리우는 인코딩 방식이 통일된 시대를 살아가고 있다. <strong>유니코드(Unicode)</strong> 란 유니코드 협회(Unicode Consortium)가 제정하는 전 세계의 모든 문자를 컴퓨터에서 일관되게 표현하고 다룰 수 있도록 설계된 산업 표준이다. 이 표준에는 ISO 10646 문자 집합, 문자 인코딩, 문자 정보 데이터베이스, 문자를 다루기 위한 알고리즘 등을 포함하고 있다.</p>

    <p>유니코드가 탄생하기 이전에는 같은 한글이 적힌 텍스트 파일이라도 표현하는 방법이 제각각이었기에, 어떤 파일이 지원하지 않는 다른 <em>인코딩</em> 형식으로 저장되어 있는 경우에는 파일을 제대로 불러올 수 없는 문제가 발생했었다. 기본적으로 유니코드의 목적은 현존하는 문자 인코딩 방법을 모두 유니코드로 교체하는 것이다.</p>

    <blockquote>
      <p><strong>인코딩(부호화)란?</strong></p>

      <p>인코딩이란 어떤 문자나 기호를 컴퓨터가 이용할 수 있는 신호로 만드는 것이다. 이 신호를 입력하는 인코딩과 문자를 해독하는 디코딩을 하기 위해서는 미리 정해진 기준을 바탕으로 입력과 해독이 처리되어야 한다. 이렇게 인코딩과 디코딩의 기준을 문자열 세트 또는 문자셋(charset)이라고 하며, 이 문자셋의 국제 표준이 <strong>유니코드</strong>이다.</p>
    </blockquote>
  </li>
</ul>

<hr />
<h5 id="ascii-문자">ASCII 문자</h5>
<ul>
  <li>
    <p>American Standard Code for Information Interchange 의 약자이며, 영문 알파벳을 사용하는 대표적인 문자 인코딩으로 7 비트로 모든 영어 알파벳을 표현할 수 있다. 52개의 영문 알파벳 대소문자와, 10개의 숫자, 32개의 특수 문자, 그리고 하나의 공백 문자를 포함한다.</p>

    <p>그런데 쓰다보니 128개만으로는 표현하기에 부족하더라. 1비트만 추가하면 표현할 수 있는 문자 개수가 두 배로 늘어나는데. 그래서 미국은 그렇게 했다. 그렇게 2의 8승 개의 문자를 표현하는 8비트 아스키코드가 나왔다. 이 녀석을 ANSI 코드라고 한다. 이렇게 1 바이트만으로 표현되는 방식을 SBCS(Single Byte Character Set) 라고 한다.</p>

    <p>반면, 유니코드는 ASCII 문자 외에 한자, 한글 등 모든 언어를 취급하는 확장한 형태이다.</p>
  </li>
</ul>

<p><br />
<br /></p>

<h2 id="오늘-느낀-점">오늘 느낀 점</h2>

<p><br />
<br /></p>

<h2 id="내일-할-일">내일 할 일</h2>
<ul>
  <li>[네트워크] 심화</li>
</ul>
:ET