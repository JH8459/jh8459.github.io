I"<p><img src="https://user-images.githubusercontent.com/83164003/131701318-f0ff36c4-1fcc-4f21-b978-18a9d8ec3386.jpg" alt="algorithm" /></p>
<h2 id="toy-36-closestpairofpoints">TOY 36. closestPairOfPoints</h2>
<h3 id="문제">문제</h3>
<hr />
<p>좌표평면 상의 다양한 점들을 입력받아 가장 가까운 두 점 사이의 거리를 리턴해야 합니다.</p>

<h3 id="입력">입력</h3>
<hr />
<h4 id="인자-1-points">인자 1: points</h4>
<ul>
  <li>배열을 요소로 갖는 배열</li>
  <li><code class="language-plaintext highlighter-rouge">points.length</code>는 20,000 이하</li>
  <li><code class="language-plaintext highlighter-rouge">points[i]</code>는 <code class="language-plaintext highlighter-rouge">number</code> 타입을 요소로 갖는 배열</li>
  <li><code class="language-plaintext highlighter-rouge">points[i].length</code>는 2</li>
  <li><code class="language-plaintext highlighter-rouge">points[i]</code>의 요소는 차례대로 좌표평면 위의 y좌표, x좌표</li>
  <li><code class="language-plaintext highlighter-rouge">points[i][j]</code>는 0 이상 10,000 이하의 정수</li>
</ul>

<h3 id="출력">출력</h3>
<hr />
<ul>
  <li><code class="language-plaintext highlighter-rouge">number</code> 타입을 리턴해야 합니다.</li>
</ul>

<h3 id="주의사항">주의사항</h3>
<hr />
<ul>
  <li><code class="language-plaintext highlighter-rouge">points</code>는 y좌표나 x좌표 등으로 정렬되어 있지 않습니다.</li>
  <li>두 점 사이의 거리를 계산하는 함수 <code class="language-plaintext highlighter-rouge">calculateDistance</code>가 주어집니다. 두 점 간 거리는 <strong>반드시</strong> 이 함수를 이용해서 계산해야 합니다.</li>
  <li>함수 <code class="language-plaintext highlighter-rouge">calculateDistance</code>는 소수점 계산을 피하기 위해 두 점 사이의 거리에 100을 곱한 후 정수 부분만 취합니다. 최단 거리도 이 기준으로 판단합니다.</li>
</ul>

<h3 id="입출력-예시">입출력 예시</h3>
<hr />
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">points</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
  <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
  <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span>
<span class="p">];</span>
<span class="kd">let</span> <span class="nx">output</span> <span class="o">=</span> <span class="nx">closestPairOfPoints</span><span class="p">(</span><span class="nx">points</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">output</span><span class="p">);</span> <span class="c1">// --&gt; 141 ([1, 3], [2, 2])</span>
<span class="cm">/*
3 | 
2 |     x
1 |       x
0 | x 
------------
    0 1 2 3 
*/</span>

<span class="nx">points</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
  <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span>
  <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
  <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span>
<span class="p">];</span>
<span class="nx">output</span> <span class="o">=</span> <span class="nx">closestPairOfPoints</span><span class="p">(</span><span class="nx">points</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">output</span><span class="p">);</span> <span class="c1">// --&gt; 100 ([0, 0], [0, 1])</span>
<span class="cm">/*
5 | x
4 | 
3 | x
2 |     
1 | x     
0 | x 
------------
    0 1 2 3 
*/</span>
</code></pre></div></div>

<h3 id="advanced">Advanced</h3>
<hr />
<ul>
  <li>가장 가까운 두 점 사이의 거리를 구하는 효율적인 알고리즘(<code class="language-plaintext highlighter-rouge">O(N * logN)</code>)이 존재합니다.</li>
</ul>

<h3 id="힌트">힌트</h3>
<hr />
<ul>
  <li>효율적인 알고리즘은 병합 정렬(merge sort)과 비슷하게 분할 정복(divide and conquer) 알고리즘을 사용해야 합니다. 어떻게 나눠야 할 지, 나누었을 때 놓치는 부분은 없는 지 유의하면서 고민해 보시기 바랍니다.</li>
</ul>

<h2 id="toy-36-solution">TOY 36. Solution</h2>
<h3 id="수도코드">수도코드</h3>
<hr />

<h3 id="문제풀이">문제풀이</h3>
<hr />

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>
<hr />

<p><strong>Reference Code</strong></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<h2 id="오늘-느낀-점">오늘 느낀 점</h2>
<p>우선은 <strong>Reference Code</strong>를 보고 이해하는 수준에서 마무리하였다.  <del>다시 풀어 볼 예정</del></p>

<h2 id="내일-할-일">내일 할 일</h2>
<ul>
  <li>TOY 37. coinChange</li>
</ul>
:ET