I"5<p><img src="https://user-images.githubusercontent.com/83164003/131701318-f0ff36c4-1fcc-4f21-b978-18a9d8ec3386.jpg" alt="Algorithm" /></p>
<h2 id="보드-게임">보드 게임</h2>
<h3 id="문제">문제</h3>
<hr />
<p>자신이 감옥에 간 사이 연인이었던 줄리아를 앤디에게 빼앗겨 화가 난 조지는 브레드, 맷과 함께 앤디 소유의 카지노 지하에 있는 금고를 털기로 합니다. 온갖 트랩을 뚫고 드디어 금고에 진입한 조지와 일행들. 조지는 이와중에 감옥에서 틈틈이 공부한 알고리즘을 이용해 target 금액을 훔칠 수 있는 방법의 경우의 수를 계산하기 시작합니다.</p>

<p>예를 들어 $50 을 훔칠 때 $10, $20, $50 이 있다면 다음과 같이 4 가지 방법으로 $50을 훔칠 수 있습니다.</p>

<ul>
  <li>$50 한 장을 훔친다</li>
  <li>$20 두 장, $10 한 장을 훔친다</li>
  <li>$20 한 장, $10 세 장을 훔친다</li>
  <li>$10 다섯 장을 훔친다</li>
</ul>

<p>훔치고 싶은 target 금액과 금고에 있는 돈의 종류 type 을 입력받아, 조지가 target 을 훔칠 수 있는 방법의 수를 리턴하세요.</p>

<h3 id="입력">입력</h3>
<hr />
<h4 id="인자-1-target">인자 1: target</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Number</code> 타입의 100,000 이하의 자연수</li>
</ul>

<h4 id="인자-2-type">인자 2: type</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Number</code> 타입을 요소로 갖는 100 이하의 자연수를 담은 배열</li>
</ul>

<h3 id="출력">출력</h3>
<hr />
<ul>
  <li><code class="language-plaintext highlighter-rouge">Number</code> 타입을 반환해야 합니다.</li>
  <li>조지가 target을 훔칠 수 있는 방법의 수를 숫자로 반환합니다.</li>
</ul>

<h3 id="주의사항">주의사항</h3>
<hr />
<ul>
  <li>모든 화폐는 무한하게 있다고 가정합니다.</li>
</ul>

<h3 id="입출력-예시">입출력 예시</h3>
<hr />
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">output</span> <span class="o">=</span> <span class="nx">ocean</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">50</span><span class="p">]);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">output</span><span class="p">);</span> <span class="c1">// 4</span>

<span class="kd">let</span> <span class="nx">output</span> <span class="o">=</span> <span class="nx">ocean</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">50</span><span class="p">]);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">output</span><span class="p">);</span> <span class="c1">// 10</span>

<span class="kd">let</span> <span class="nx">output</span> <span class="o">=</span> <span class="nx">ocean</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">]);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">output</span><span class="p">);</span> <span class="c1">// 4</span>
</code></pre></div></div>

<h3 id="hint">Hint!</h3>
<hr />
<p>해당 문제는 <code class="language-plaintext highlighter-rouge">냅색 알고리즘(Knapsack Problem)</code>을 활용하여 풀 수 있습니다.
검색해 보시고, 연구해 보세요!</p>

<h2 id="solution">Solution</h2>
<h3 id="수도코드">수도코드</h3>
<hr />

<p>정말 문제를 받자마자 도저히 감이 잡히질 않았다.. <del>기수이동 전에는 Advanced라고 풀어보지도 않았다…</del></p>

<p><strong>Reference Code</strong>를 참조하였다.</p>

<h3 id="문제풀이">문제풀이</h3>
<hr />

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">boardGame</span><span class="p">(</span><span class="nx">board</span><span class="p">,</span> <span class="nx">operation</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">result</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>  <span class="c1">// 배열의 인덱스 문제로, board[y][x] 로 인지해야한다.</span>

  <span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">move</span> <span class="k">of</span> <span class="nx">operation</span><span class="p">){</span>  <span class="c1">// operation 문자열을 순회</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">move</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">U</span><span class="dl">'</span><span class="p">){</span>  <span class="c1">// UP</span>
      <span class="nx">y</span><span class="o">-=</span><span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">move</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">D</span><span class="dl">'</span><span class="p">){</span>  <span class="c1">// DOWN</span>
      <span class="nx">y</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">move</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">L</span><span class="dl">'</span><span class="p">){</span>  <span class="c1">// LEFT</span>
      <span class="nx">x</span><span class="o">-=</span><span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">move</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">R</span><span class="dl">'</span><span class="p">){</span>  <span class="c1">// RIGHT</span>
      <span class="nx">x</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">&lt;</span><span class="mi">0</span> <span class="o">||</span> <span class="nx">x</span><span class="o">&gt;</span><span class="nx">board</span><span class="p">.</span><span class="nx">length</span> <span class="o">||</span> <span class="nx">y</span><span class="o">&lt;</span><span class="mi">0</span> <span class="o">||</span> <span class="nx">y</span><span class="o">&gt;</span><span class="nx">board</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="k">return</span> <span class="dl">'</span><span class="s1">OUT</span><span class="dl">'</span><span class="p">;</span>
    
    <span class="nx">result</span> <span class="o">+=</span> <span class="nx">board</span><span class="p">[</span><span class="nx">y</span><span class="p">][</span><span class="nx">x</span><span class="p">];</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="nx">result</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>
<hr />

<p><strong>Reference Code</strong></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// LOOK UP TABLE을 사용한다면 조건문을 추상화시킬 수 있습니다.</span>
<span class="kd">function</span> <span class="nx">boardGame</span><span class="p">(</span><span class="nx">board</span><span class="p">,</span> <span class="nx">operation</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// TODO: 여기에 코드를 작성하세요.</span>
  <span class="kd">const</span> <span class="nx">DIR</span> <span class="o">=</span> <span class="p">{</span>
    <span class="dl">'</span><span class="s1">U</span><span class="dl">'</span><span class="p">:</span> <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
    <span class="dl">'</span><span class="s1">D</span><span class="dl">'</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
    <span class="dl">'</span><span class="s1">L</span><span class="dl">'</span><span class="p">:</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">],</span>
    <span class="dl">'</span><span class="s1">R</span><span class="dl">'</span><span class="p">:</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
  <span class="p">}</span>
  <span class="kd">const</span> <span class="nx">LEN</span> <span class="o">=</span> <span class="nx">board</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
  <span class="kd">const</span> <span class="nx">isValid</span> <span class="o">=</span> <span class="p">(</span><span class="nx">y</span><span class="p">,</span> <span class="nx">x</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="nx">y</span> <span class="o">&amp;&amp;</span> <span class="nx">y</span> <span class="o">&lt;</span> <span class="nx">LEN</span> <span class="o">&amp;&amp;</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="nx">x</span> <span class="o">&amp;&amp;</span> <span class="nx">x</span> <span class="o">&lt;</span> <span class="nx">LEN</span><span class="p">;</span>

  <span class="kd">let</span> <span class="nx">Y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">X</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">score</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">operation</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="p">[</span><span class="nx">dY</span><span class="p">,</span> <span class="nx">dX</span><span class="p">]</span> <span class="o">=</span> <span class="nx">DIR</span><span class="p">[</span><span class="nx">operation</span><span class="p">[</span><span class="nx">i</span><span class="p">]];</span>
    <span class="nx">Y</span> <span class="o">+=</span> <span class="nx">dY</span><span class="p">;</span>
    <span class="nx">X</span> <span class="o">+=</span> <span class="nx">dX</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">isValid</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span> <span class="nx">X</span><span class="p">)</span> <span class="o">===</span> <span class="kc">false</span><span class="p">)</span> <span class="k">return</span> <span class="dl">'</span><span class="s1">OUT</span><span class="dl">'</span><span class="p">;</span>
    <span class="nx">score</span> <span class="o">+=</span> <span class="nx">board</span><span class="p">[</span><span class="nx">Y</span><span class="p">][</span><span class="nx">X</span><span class="p">];</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">score</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<h2 id="느낀-점">느낀 점</h2>

<p><strong>Reference Code</strong>와 비슷하게 접근하였지만, 나와 다르게 <code class="language-plaintext highlighter-rouge">UDLR</code> 테이블을 만들어 간결히 추상화를 시켰으며 <code class="language-plaintext highlighter-rouge">OUT</code> 판별 로직또한 함수화 하여 간결히 사용하였다.</p>

<p>코드를 생각의 흐름대로 짜는 습관도 좋지만, 저렇게 작은 단위로 나눠 모듈화하는 과정또한 중요해보인다. (만약 코드가 크다면, 내가 짠 코드보다  <strong>Reference Code</strong>가 가독성, 재사용성이 뛰어나다.)</p>
:ET