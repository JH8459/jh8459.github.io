I"-<p><img src="https://user-images.githubusercontent.com/83164003/152715311-82cc5a61-ca9c-4c46-a955-77970d4449bb.jpg" alt="Project" /></p>
<h2 id="refactoring">Refactoring</h2>

<p>저번 한 주 동안 서버에서 우선적으로 리팩토링이 필요한 부분을 선정했었던 Task들을 모두 끝마쳤다.</p>
<ul>
  <li><a href="https://jh8459.github.io/project/22.02.07.refactoring/">[Project] ALL-CON Refactoring 1일차 - (서버) 우선순위 선정</a></li>
  <li><a href="https://jh8459.github.io/project/22.02.08.refactoring/">[Project] ALL-CON Refactoring 2일차 - (서버) 민감정보 암호화</a></li>
  <li><a href="https://jh8459.github.io/project/22.02.09.refactoring/">[Project] ALL-CON Refactoring 3일차 - (서버) 하나의 요청에 두개 이상의 응답시 발생하는 에러 핸들링</a></li>
  <li><a href="https://jh8459.github.io/project/22.02.10.refactoring/">[Project] ALL-CON Refactoring 4일차 - (서버) 유효하지 않은 로그인 상태 검증</a></li>
  <li><a href="https://jh8459.github.io/project/22.02.11.refactoring/">[Project] ALL-CON Refactoring 5일차 - (서버) 스키마 수정</a></li>
</ul>

<p><br />
<br /></p>

<p>기존 서버의 코드를 고치는데 2주의 기간을 예상하였는데 생각보다 빠르게 진행되었다.</p>

<p>물론 <code class="language-plaintext highlighter-rouge">sokect.io</code>등 추가하고 싶은 기능들도 많지만 <strong>“기존 코드의 버그부터 수정하자”</strong>가 주된 의견이였기에 더는 욕심이라 판단된다.</p>

<p>약속한 기간 중 이번 한 주 1주일가량 기간이 남았다.<br /> 
그래서 클라이언트에서 내가 작성한 코드들을 유지보수 해보기로 결정하였으며, 그 중 리팩토링이 필요한 부분 우선순위를 정리해 보았다.
<br /></p>

<h3 id="1️⃣-1순위">1️⃣ 1순위</h3>
<hr />

<ul>
  <li><strong>[클라이언트]</strong> TypeScript 문법 체크
    <ul>
      <li>어색한 문법및 Type 누락 코드 유지보수 필요</li>
    </ul>
  </li>
</ul>

<p><br />
<br /></p>

<p>우선적으로 선택한 Task는 위과 같다. <br />
사실 TypeScript 언어를 처음 사용하기도 했으며, 타입에 관하여 깊게 생각하지 않고 작성한 코드가 많다.</p>

<p>깊게 학습하고 쓴 코드가 아니기때문에 수정및 보완이 필요할 듯 하다.</p>

<p>1~2일 이내로 1순위 Task를 끝마치는게 1차 계획이다.</p>

<h3 id="2️⃣-2순위">2️⃣ 2순위</h3>
<hr />

<ul>
  <li><strong>[클라이언트]</strong> useEffect
    <ul>
      <li>중복 실행 현상 (콘서트 조회시 조회수가 1회 이상씩 올라가는 현상)</li>
      <li>비동기 처리 구현 (ex. Loading 중인 표현)</li>
    </ul>
  </li>
</ul>

<p><br />
<br /></p>

<p>다음으로 시급한 리팩토링 대상은 위와 같다.<br />
이중 <strong>중복 실행 현상</strong>(콘서트 조회시 조회수가 1회 이상씩 올라가는 현상)을 우선적으로 Task를 가져갈 예정이다.</p>

<p>우선 컴포넌트 생명주기에 관련된 내용이다.<br />
클라이언트쪽 내용은 깊게 공부해 볼 생각까진 없었으나 내가 작성한 코드만큼은 내가 설명할 수 있어야 내 코드라 말할 수 있다고 생각한다.</p>

<p>깊게 공부하여 코드 수정은 하지 못하겠지만 개념정도는 정리 한 뒤 다시 코드를 써보고 싶어서 선정하였다.</p>

<p>그리고 마지막으로 가져갈 Task는 비동기 처리시 로딩중인 표현을 구현 해 볼 예정이다.<br />
이 부분은 어려운 내용은 아니지만 비동기 처리시 로딩 표현은 전반적인 서비스의 퀄리티가 많이 향상 될 듯하여 선정해보았다.</p>

<hr />

<p>우선 오늘은 프로젝트 전반적인 리팩토링 대상 우선순위를 점검하였으며, 필요한 부분들을 먼저 학습부터 해볼 예정이다.
오늘은 TypeScript 문법을 찾아본 뒤 스스로 정리하는 시간을 가져보려 한다.</p>

<p>본격적인 코드수정 작업은 내일부터 해 볼 예정이다.
<br />
<br /></p>
:ET