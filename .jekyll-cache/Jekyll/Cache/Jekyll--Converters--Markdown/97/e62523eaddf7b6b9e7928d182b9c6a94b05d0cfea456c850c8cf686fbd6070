I"f
<p><img src="https://user-images.githubusercontent.com/83164003/127775612-7464075f-89e7-478e-82ee-dc1c2710a125.jpeg" alt="TIL" /></p>
<h2 id="today-i-learnd">Today I Learnd</h2>
<h3 id="1-클라이언트-서버-아키텍쳐-clientserver-architecture">1. 클라이언트-서버 아키텍쳐 (Client–server architecture)</h3>
<ul>
  <li>
    <p>클라이언트-서버 아키텍처는 리소스가 존재하는 곳과, 리소스를 사용하는 앱을 분리시킨 네트워크 모델이다. 리소스를 사용하는 앱이 바로 <strong>“클라이언트”</strong>, 리소스가 제공(serve)하는 곳은 <strong>“서버”</strong> 라고 부른다. 클라이언트와 서버로만 이루어진 모델을 2-Tier 아키텍처라고 부르기도 한다.</p>

    <p><img src="https://user-images.githubusercontent.com/83164003/131768527-fd46d641-6172-48e5-a547-1625cc3a6537.png" alt="클라이언트-서버 아키텍처" /></p>

    <p>일반적으로 서버는 리소스를 전달해주는 역할만 담당한다. 리소스를 저장하는 공간을 별도로 마련해 두는데, 이 공간을 <strong>“데이터베이스”</strong> 라고 부르며, 이처럼 기존 2티어 아키텍처에 데이터베이스가 추가된 형태를 3티어 아키텍처라고 일컫는다.</p>
  </li>
</ul>

<hr />
<h4 id="1-1-http-프로토콜">1-1. HTTP 프로토콜</h4>
<ul>
  <li>
    <p>HTTP(Hypertext Transfer Protocol)는 웹을 개발하는 사람이라면 누구나 다 알아야 하는 통신 프로토콜이다. <strong>프로토콜</strong>이란 상호 간에 정의한 규칙을 의미하며 특정 기기 간에 데이터를 주고받기 위해 정의되었다.</p>
  </li>
  <li>
    <p>HTTP 프로토콜의 특징은 상태가 없는(stateless) 프로토콜이다. 여기서 “상태가 없다”라는 말은 데이터를 주고 받기 위한 각각의 데이터 요청이 서로 독립적으로 관리가 된다는 말이다. 즉, 이전 데이터 요청과 다음 데이터 요청이 서로 관련이 독립적이다.</p>
  </li>
</ul>

<p><br />
<br /></p>

<h2 id="오늘-느낀-점">오늘 느낀 점</h2>
<ul>
  <li>작성중</li>
</ul>

<p><br />
<br /></p>

<h2 id="내일-할-일">내일 할 일</h2>
<ul>
  <li>작성중</li>
  <li>
    <p>TOY 8. 알고리즘 풀이</p>

    <blockquote>
      <p>정수를 요소로 갖는 배열을 입력받아 3개의 요소를 곱해 나올 수 있는 최대값을 리턴해야 합니다.</p>

      <p><img src="https://user-images.githubusercontent.com/83164003/131699769-9d13e085-7064-42fc-baa4-9ddfeae3a423.png" alt="스크린샷, 2021-09-02 00-25-55" /></p>
    </blockquote>
  </li>
</ul>
:ET