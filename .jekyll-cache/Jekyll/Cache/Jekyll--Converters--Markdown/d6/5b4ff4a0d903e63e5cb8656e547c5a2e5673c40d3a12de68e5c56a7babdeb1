I"<p><img src="https://user-images.githubusercontent.com/83164003/127775612-7464075f-89e7-478e-82ee-dc1c2710a125.jpeg" alt="TIL" /></p>
<h2 id="today-i-learnd">Today I Learnd</h2>
<h3 id="1-component-driven-development-cdd">1. Component Driven Development (CDD)</h3>
<ul>
  <li>
    <p>부품 단위로 UI 컴포넌트를 만들어 나가는 개발이다.  페이지 단위로 UI 개발이 이루어지는 것과는 반대로 UI 컴포넌트들부터 만들고 이를 기반으로 페이지를 구성하는걸 말한다.</p>

    <p><img src="https://user-images.githubusercontent.com/83164003/134765002-85187ace-81db-4807-837e-d171c8a4efe3.png" alt="스크린샷, 2021-09-25 17-28-15" /></p>

    <p><a href="https://storybook.js.org/" target="_blank">Storybook</a> 같은 UI 컴포넌트 익스플러어 툴을 통해 체계적으로 관리, 개발자들간 쉽게 소통할 수 있는 장점이 있다.</p>
  </li>
</ul>

<h3 id="2-css-in-js-방법론">2. CSS in JS 방법론</h3>
<h4 id="2-1-구조적인-css-작성-방법의-발전">2-1. 구조적인 CSS 작성 방법의 발전</h4>
<ul>
  <li>
    <p>CSS 작성 방식도 꾸준히 진화해 오고 있다.</p>

    <p><img src="https://user-images.githubusercontent.com/83164003/134814144-584fee4d-e69e-4391-97ff-a71850f8a3ce.png" alt="스크린샷, 2021-09-27 00-25-15" /></p>

    <p>프로젝트의 규모나 복잡도가 점점 커지고 함께 작업해야할 팀원 수도 많아짐에 따라 CSS를 작성하는 일관된 패턴이 없다는 것은 개발자들에게 가장 큰 걸림돌이 되었다. 또한 모바일이나 태블릿을 비롯한 다양한 디바이스들의 등장으로 웹사이트들이 다양한 디스플레이를 커버해야 하기 때문에 CSS는 더 복잡해지게 되었다. 따라서 CSS 작업을 효율적으로 하기 위해 구조화된 CSS의 필요성이 대두되었다.</p>
  </li>
</ul>

<p><br />
<br /></p>

<h2 id="오늘-느낀-점">오늘 느낀 점</h2>

<p><br />
<br /></p>

<h2 id="내일-할-일">내일 할 일</h2>
<ul>
  <li>[React] 상태 관리</li>
</ul>
:ET