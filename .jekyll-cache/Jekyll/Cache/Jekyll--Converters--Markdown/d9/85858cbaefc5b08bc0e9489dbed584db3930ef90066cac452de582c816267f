I"2<p><img src="https://user-images.githubusercontent.com/83164003/127775612-7464075f-89e7-478e-82ee-dc1c2710a125.jpeg" alt="TIL" /></p>
<h2 id="today-i-learnd">Today I Learnd</h2>
<h3 id="1-orm">1. ORM</h3>
<hr />

<hr />

<h3 id="2-sequelize">2. Sequelize</h3>
<hr />

<p>쇼핑몰 애플리케이션 Cmarket의 데이터베이스를 구축해야 한다. 구현한 Cmarket이 영속적인 데이터를 가질 수 있도록, 더 이상 배열이나 객체 등을 이용해서 인메모리 형태로 데이터를 저장하지 않고 모든 요청은 반드시 데이터베이스를 이용해야 한다.</p>

<hr />
<h5 id="database스키마-시드파일">Database(스키마, 시드파일)</h5>
<hr />

<ul>
  <li><strong>스키마</strong>는 <code class="language-plaintext highlighter-rouge">im-sprint-cmarket-database/server/schema.sql</code> 파일에 명시되어 있다. 해당 파일을 들여다 보면 다음과 같다.</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nx">CREATE</span> <span class="nx">TABLE</span> <span class="nx">users</span> <span class="p">(</span> <span class="cm">/* 테이블 생성 : CREATE TABLE 테이블이름 */</span>
    <span class="nx">id</span> <span class="nx">INT</span> <span class="nx">AUTO_INCREMENT</span><span class="p">,</span>
    <span class="nx">username</span> <span class="nx">varchar</span><span class="p">(</span><span class="mi">255</span><span class="p">),</span>
    <span class="nx">PRIMARY</span> <span class="nx">KEY</span> <span class="p">(</span><span class="nx">id</span><span class="p">)</span>
  <span class="p">);</span>

  <span class="cm">/* ...생략 */</span>

  <span class="nx">ALTER</span> <span class="nx">TABLE</span> <span class="nx">orders</span> <span class="nx">ADD</span> <span class="nx">FOREIGN</span> <span class="nx">KEY</span> <span class="p">(</span><span class="nx">user_id</span><span class="p">)</span> <span class="nx">REFERENCES</span> <span class="nx">users</span> <span class="p">(</span><span class="nx">id</span><span class="p">);</span> <span class="cm">/* 테이블 수정(컬럼 추가[외래키]) : ALTER TABLE 테이블이름 ADD ~ */</span>
</code></pre></div></div>
<ul>
  <li>
    <p><strong>시드파일</strong>은  <code class="language-plaintext highlighter-rouge">im-sprint-cmarket-database/server/seed.sql</code> 파일에 명시되어 있다. 해당 파일을 들여다 보면 다음과 같다.</p>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/* ...생략  */</span>

<span class="nx">INSERT</span> <span class="nx">INTO</span> <span class="nx">users</span> <span class="p">(</span><span class="nx">username</span><span class="p">)</span> <span class="nx">VALUES</span> <span class="p">(</span><span class="dl">"</span><span class="s2">김코딩</span><span class="dl">"</span><span class="p">);</span> <span class="cm">/* INSERT INTO 테이블이름(필드이름1 ...) VALUES (데이터값...) */</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>스프린트에서는 위 <code class="language-plaintext highlighter-rouge">schema.sql</code>파일과 <code class="language-plaintext highlighter-rouge">seed.sql</code>파일을 토대로 node.j <code class="language-plaintext highlighter-rouge">mysql</code> 모듈을 통해서 DB를 다룬다. <code class="language-plaintext highlighter-rouge">im-sprint-cmarket-database/server/db/index.js</code> 파일을 살펴보면 다음과 같다.</p>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">mysql</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">mysql</span><span class="dl">'</span><span class="p">);</span>  <span class="c1">// mysql 모듈 사용 선언, npm install mysql 후 사용가능하다.</span>
<span class="kd">const</span> <span class="nx">dotenv</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">dotenv</span><span class="dl">'</span><span class="p">);</span>  <span class="c1">// DB 비밀번호등 환경변수는 .env 모듈을 통해 사용한다.</span>
<span class="kd">const</span> <span class="nx">config</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">../config/config</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// config 또한 환경변수를 다루는 모듈이다. .env와 함께 사용한다.</span>
<span class="nx">dotenv</span><span class="p">.</span><span class="nx">config</span><span class="p">();</span> <span class="c1">// 환경변수 불러오기</span>
  
<span class="kd">const</span> <span class="nx">con</span> <span class="o">=</span> <span class="nx">mysql</span><span class="p">.</span><span class="nx">createConnection</span><span class="p">(</span>  <span class="c1">// mysql 연결</span>
  <span class="nx">config</span><span class="p">[</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">NODE_ENV</span> <span class="o">||</span> <span class="dl">'</span><span class="s1">development</span><span class="dl">'</span><span class="p">]</span> <span class="c1">// development 환경, test 환경 이지선다로 실행한다. (서버를 킨 채로 test를 실행하면 오류 발생의 원인)</span>
<span class="p">);</span>

<span class="c1">// ...생략</span>
</code></pre></div>    </div>

    <blockquote>
      <p><code class="language-plaintext highlighter-rouge">im-sprint-cmarket-database/server/.env.sample</code> 과 <code class="language-plaintext highlighter-rouge">im-sprint-cmarket-database/server/config/config.js</code> 파일에 환경변수들이 담겨져있다. 개발환경에 맞게 설정하자.</p>
    </blockquote>
  </li>
  <li>위와 같은 설정이 모두 끝났다면, <code class="language-plaintext highlighter-rouge">config.js</code> 파일에 DB 이름은 cmarket 으로 설정되어 있으므로 mysql을 통해서 빈 cmarket DB를 만들어 준다</li>
  <li><code class="language-plaintext highlighter-rouge">schema.sql</code> 파일을 활용하여 내부 테이블을 배치모드로 한번에 만들 수 있게 된다. <code class="language-plaintext highlighter-rouge">mysql -u (유저이름) -p &lt; server/schema.sql -Dcmarket</code></li>
  <li><code class="language-plaintext highlighter-rouge">seed.sql</code> 파일을 활용하여 테이블 내에 준비된 시드파일을 심어준다. <code class="language-plaintext highlighter-rouge">mysql -u (유저이름) -p &lt; server/seed.sql -Dcmarket</code></li>
</ul>

<hr />
<h5 id="서버">서버</h5>
<ul>
  <li>
    <p>app.js 파일에는 express로 서버를 만드는 코드가 이미 작성되어있다.</p>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	
</code></pre></div>    </div>
    <hr />
  </li>
</ul>
:ET