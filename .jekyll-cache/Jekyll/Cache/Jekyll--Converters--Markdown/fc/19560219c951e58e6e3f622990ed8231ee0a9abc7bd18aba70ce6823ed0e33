I"/<hr />

<p><img src="https://user-images.githubusercontent.com/83164003/127775612-7464075f-89e7-478e-82ee-dc1c2710a125.jpeg" alt="TIL" /></p>
<h2 id="오늘-한-일">오늘 한 일</h2>
<h3 id="1-객체-코플릿">1. 객체 코플릿</h3>
<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">for ... in</code> : 상속된 열거 가능한 속성들을 포함하여 객체에서 문자열로 키가 지정된 모든 열거 가능한 속성에 대해 반복합니다.</p>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">for</span> <span class="p">(</span><span class="nx">variable</span> <span class="k">in</span> <span class="nx">object</span><span class="p">)</span> <span class="p">{</span> <span class="p">...</span> <span class="p">}</span>
</code></pre></div>    </div>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">variable</code> : 매번 반복마다 다른 속성이름(Value name)이 변수(variable)로 지정됩니다.</li>
      <li><code class="language-plaintext highlighter-rouge">object</code> :  반복작업을 수행할 객체로 열거형 속성을 가지고 있는 객체.
        <h3 id="2-github-블로그-이사">2. Github 블로그 이사</h3>
      </li>
    </ul>
  </li>
  <li>블로그를 velog에서 git에서 jekyll 환경으로 세팅하는 블로그로 변경해보았다.</li>
  <li><a href="https://honbabzone.com/jekyll/start-gitHubBlog/" target="_blank">https://honbabzone.com/</a> 해당 블로그를 통해서 <code class="language-plaintext highlighter-rouge">minimal-mistakes</code> 테마를 이용하여 세팅을 해보았다. 우선 불필요한 포스팅을 줄이고 오늘 배운 내용 및 시간을 어떻게 보냈는지, 어떤점을 느끼고 발전했는지에 대한 부분만 짚고 넘어갈 예정이다.</li>
</ul>

<p><br />
<br /></p>

<h2 id="오늘-느낀-점">오늘 느낀 점</h2>

<ul>
  <li>
    <p>객체의 접근</p>
  </li>
  <li>
    <p>이제껏 CSS는 디자이너(?) 의 영역이라 생각하며 소홀히 해왔는데, 잘못생각했다… 반응형 웹이라던지 소비자들과 맞닿는 영역에서 이뤄지는 CSS도 굉장히 중요하다 생각된다.</p>
    <ul>
      <li>예를 들면, <strong>오늘의 집</strong>과 <strong>집꾸미기</strong> 사이트를 보면 CSS의 중요성을 한 눈에 볼 수 있다 생각한다. <del>(오늘의집과 집꾸미기는 필자와는 상관없습니다…)</del> (21.07.23 기준 작성)</li>
    </ul>

    <p><img src="https://user-images.githubusercontent.com/83164003/127821688-a0de6822-3bf4-4da2-9078-671229da40ba.png" alt="오늘의집-1" /></p>

    <p><img src="https://user-images.githubusercontent.com/83164003/127821760-64cf79cb-d6ee-42e9-9cd4-953404fc476b.png" alt="오늘의집-2" /></p>

    <ul>
      <li>스크롤을 내려도 구매옵션과 구매란이 따라오는 CSS 디자인은 상품상세설명을 쉽게 보면서 구매까지 소비자가 불편함없이 프로세스가 이어진다.</li>
    </ul>

    <p><img src="https://user-images.githubusercontent.com/83164003/127821976-21435a42-7298-464f-acae-d2780f065456.png" alt="집꾸미기" /></p>

    <ul>
      <li>반면 스크롤을 내리면 구매옵션과 구매란이 따라 오지 않는 고정적인 CSS 디자인은 소비자에게 옵션암기(!?) 라는 불편함을  강요를 한다. <em>(구매색상이 마음에 들어 구매하려고 상단으로 올려서 모든 옵션을 다 고른뒤 구매버튼을 누르면 “아 색상이 뭐였지..?” 라는 생각이 다시 떠올라 웹페이지를 다시 내려본다는 등의 불편함이 야기될수 있음)</em></li>
    </ul>
  </li>
</ul>

<p><br />
<br /></p>

<h2 id="내일-할-일">내일 할 일</h2>

<ul>
  <li>CSS 실습 필요. 학습보다는 다양한 id, class를 선언해가며 속성값을 주는 실습이 필요로해보인다.</li>
  <li>구글의 기술트렌드 리포트를 보니 과거에는 jQuery 가 주요 기술 트렌드였다면 16~18년도 이후  부터는 그 자리를 React에게 내주었다는 리포트를 오늘 학습도중 알게되었다. 
그렇기에 React는 꾸준히 학습이 필요로 보인다… 아직 찍먹 수준이라 본수업이 다가오기전 매주 주말 통하여 충분한 학습이 필요로 할 듯 하다.</li>
</ul>
:ET